definitions:
  main.article:
    properties:
      author:
        type: string
      content:
        type: string
      dislikes:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      postTime:
        type: string
      title:
        type: string
    type: object
  main.user:
    properties:
      birthday:
        type: string
      gatorPW:
        type: string
      gatorlink:
        type: string
      gender:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: An on-campus dating application
  title: UFMingle
  version: "2.0"
paths:
  /:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Return all the information of article
          schema:
            $ref: '#/definitions/main.article'
      summary: Show forum home page and all articles
  /article/create:
    post:
      parameters:
      - description: The title of the article
        in: header
        name: title
        required: true
        type: string
      - description: The content of the article
        in: header
        name: content
        required: true
        type: string
      - description: The author of the article
        in: header
        name: author
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: If the article has been created successfully, return the number
            of rows been affected, else 0
          schema:
            type: int
        "400":
          description: There is an error while creating the article
          schema:
            type: error
      summary: Create an article
  /article/pastposts/:username:
    get:
      parameters:
      - description: username, i.e. author of the article
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            items:
              $ref: '#/definitions/main.article'
            type: array
        "400":
          description: failure
          schema:
            type: error
      summary: Get article posted by the user
  /article/view/:article_id:
    get:
      parameters:
      - description: The index of the article
        in: path
        name: article_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Return the article
          schema:
            $ref: '#/definitions/main.article'
        "404":
          description: Not found or invalid article_id
          schema:
            type: string
      summary: Open the article page
  /image/avatar/:username:
    get:
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: An avatar is returned
          schema:
            type: file
        "404":
          description: Error
          schema:
            type: error
      summary: Get the avatar of the user
    post:
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: An avatar is uploaded
          schema:
            type: file
        "400":
          description: Bad request
          schema:
            type: error
        "500":
          description: Internal server error
          schema:
            type: error
      summary: Upload the avatar of the user, the name of the file should be "avatar".
  /image/delete/:filename:
    delete:
      parameters:
      - description: Filename of the image
        in: path
        name: filename
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: map
        "400":
          description: Failure
          schema:
            type: error
      summary: Delete an image file
  /image/download/:filename:
    get:
      parameters:
      - description: Image filename
        in: path
        name: filename
        required: true
        type: string
      produces:
      - image/jpeg
      responses:
        "200":
          description: Success
          schema:
            type: file
        "400":
          description: Failure
          schema:
            type: error
      summary: Retrieve images inserted in the posts or replies
  /image/upload:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 'errno: 0, data: A list of download addresses of images'
          schema:
            type: map
        "400":
          description: Error
          schema:
            type: error
      summary: Upload images inserted by users in posts or replies
  /u/article/:articleId:
    get:
      parameters:
      - description: The id of the article
        in: path
        name: articleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 'There are four possibilities. 0: no reaction; 1: thumbs up;
            2: thumbs down; -1: error'
          schema:
            type: int
        "400":
          description: Unable to get the cookie
          schema:
            type: error
        "500":
          description: Failure
          schema:
            type: error
      summary: See how users react to an article.
    patch:
      parameters:
      - description: The id of the article
        in: path
        name: articleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: int
        "400":
          description: Unable to get the cookie
          schema:
            type: error
        "500":
          description: Failure
          schema:
            type: error
      summary: Change user's reaction to an article.
  /u/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Contains password, gatorId, birthday and gender
          schema:
            $ref: '#/definitions/main.user'
        "500":
          description: Failure
          schema:
            type: error
      summary: Get user information by username
  /u/info/:item:
    patch:
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Failure
          schema:
            type: error
      summary: 'Modify three types of user information: password, birthday and gender.
        Birthday must be in the form "2010-12-30", and the gender can be male, female
        or unknown'
  /u/likes:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: The number of likes a user received
          schema:
            type: int
        "400":
          description: Unable to get the cookie
          schema:
            type: error
        "500":
          description: Server internal error
          schema:
            type: error
      summary: Get the number of likes a user received.
  /u/login:
    get:
      produces:
      - application/json
      responses: {}
      summary: Show the login page
    post:
      parameters:
      - description: Username
        in: header
        name: username
        required: true
        type: string
      - description: Password
        in: header
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Log in successfully
          schema:
            type: string
        "400":
          description: Failed to log in
          schema:
            type: string
      summary: Perform function login
  /u/logout:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Log out successfully
          schema:
            type: string
      summary: Logout
  /u/register:
    get:
      responses: {}
      summary: Show the registration page
    post:
      parameters:
      - description: Gatorlink
        in: header
        name: gatorlink
        required: true
        type: string
      - description: GatorPW
        in: header
        name: gatorPW
        required: true
        type: string
      - description: Username
        in: header
        name: username
        required: true
        type: string
      - description: Password
        in: header
        name: password
        required: true
        type: string
      responses:
        "200":
          description: Register successfully, return the number of rows been affected
          schema:
            type: int
        "400":
          description: ErrorMessage
          schema:
            type: error
      summary: Register a new user
swagger: "2.0"
